on: 
  push:
    branches:
      - main
      - 'feature-**'
    paths:
      - 'agent/**'
      - 'message/**'
  workflow_dispatch:
    inputs:
      ref:
        description: "Why trigger?"
        required: true 
        type: string
#   release:
#     branches: 
#       - main
#       - release-*

name: build agent

env:
  IMAGE: "deepflow-agent"

jobs:
  build_agent:
    name: build agent
    runs-on: [self-hosted, 16c16g]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io" 
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}" 

      - name: Build  deepflow agent
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false 
          file: agent/docker/dockerfile-build
          platforms: linux/amd64
          outputs: type=local,dest=./agent/output/

      - name: Package code build results
        run: |
          tar cvf agent-artifact.tar agent/output/target/release/deepflow-agent agent/output/target/release/deepflow-agent-ctl agent/output/src/ebpf/deepflow-ebpfctl

      - name: Archive code build results
        uses: actions/upload-artifact@v3
        with:
          name: build results
          path: |
            agent-artifact.tar

  build_agent_image:
    name: build agent image
    needs: [build_agent]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download code build results
        uses: actions/download-artifact@v3
        with:
          name: build results
          path: .

      - name: Unpack code build results
        run: |
          tar xvf agent-artifact.tar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io" 
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}" 

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: "deepflowce"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "registry.cn-beijing.aliyuncs.com"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "${{ secrets.REGISTRY_ALIYUN_ADDR }}"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}" 
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: set env
        run: |
          echo "IMAGE_TAG_PREFIX=${{ github.ref_name }}"|sed 's|main|latest|' >> $GITHUB_ENV
          echo "IMAGE_TAG=$(git rev-list --count HEAD)" >> $GITHUB_ENV

      - name: Build and push deepflow agent images
        uses: docker/build-push-action@v2
        with:
          context: agent
          push: true 
          file: agent/docker/dockerfile 
          platforms: linux/amd64
          tags: |
            "ghcr.io/${{ github.repository_owner }}/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "ghcr.io/${{ github.repository_owner }}/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "registry.cn-beijing.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "registry.cn-beijing.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "deepflowce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "${{ secrets.REGISTRY_ALIYUN_ADDR }}/dev/${{ env.IMAGE }}-ce:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "${{ secrets.REGISTRY_ALIYUN_ADDR }}/dev/${{ env.IMAGE }}-ce:${{ env.IMAGE_TAG_PREFIX }}"

      - name: build rpm
        run: |
          cd agent
          rpmbuild -bb deepflow-agent.spec -D '_rpmdir .' --buildroot $(pwd)/.rpmbuild
          rpmbuild -bb deepflow-agent_docker.spec -D '_rpmdir .' --buildroot $(pwd)/.rpmbuild
          zip -r -q artifacts.zip x86_64/

      - name: build binary package  
        run: |
          mkdir -p agent/bin-package
          cp -raf agent/output/target/release/deepflow-agent agent/bin-package/
          cd agent/bin-package/
          tar -czvf deepflow-agent.tar.gz *
 
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deepflow-agent-rpm.zip
          path: agent/artifacts.zip
          retention-days: 5

      - uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: "oss-cn-beijing.aliyuncs.com"
          access-key-id: "${{ secrets.ALIYUN_OSS_ACCESS_KEY }}"
          access-key-secret: "${{ secrets.ALIYUN_OSS_SECRETS_KEY }}"

      - name: upload agent artifacts
        run: |
          ossutil cp -rf agent/artifacts.zip oss://deepflow-ce/rpm/agent/${{ env.IMAGE_TAG_PREFIX }}/linux/amd64/deepflow-agent-rpm.zip
          ossutil cp -rf agent/output/target/release/deepflow-agent-ctl oss://deepflow-ce/bin/ctl/${{ env.IMAGE_TAG_PREFIX }}/linux/amd64/deepflow-agent-ctl
          ossutil cp -rf agent/bin-package/deepflow-agent.tar.gz  oss://deepflow-ce/bin/agent/${{ env.IMAGE_TAG_PREFIX }}/linux/amd64/deepflow-agent.tar.gz
