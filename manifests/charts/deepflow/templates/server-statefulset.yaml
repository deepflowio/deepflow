apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "metaflow.fullname" . }}-server
  labels:
    {{- include "metaflow-server.labels" . | nindent 4 }}
spec:
  replicas: {{ tpl .Values.server.replicas . }}
  podManagementPolicy: {{ tpl .Values.server.podManagementPolicy . }}
  serviceName: {{ include "metaflow.fullname" . }}-server-headless
  selector:
    matchLabels:
      {{- include "metaflow-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "metaflow-server.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: {{ tpl .Values.server.hostNetwork . }}
      dnsPolicy: {{ tpl .Values.server.dnsPolicy . }}
      imagePullSecrets:
      {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "metaflow.fullname" . }}-server
      containers:
        - name: metaflow-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ tpl .Values.image.server.repository . }}:{{ tpl .Values.image.server.tag . }}"
          imagePullPolicy: "{{ tpl .Values.image.server.pullPolicy . }}"
          ports:
            - name: server
              containerPort: 20417
              protocol: TCP
            - containerPort: 20035
              name: grpc
              protocol: TCP
            - containerPort: 20135
              name: ssl-grpc
              protocol: TCP
            - containerPort: 20416
              name: querier
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          volumeMounts:
          - name: server-config
            mountPath: /etc/server.yaml
            subPath: server.yaml
        {{- range .Values.server.extraVolumeMounts }}
          - name: {{ .name }}
            mountPath: {{ .mountPath }}
            subPath: {{ .subPath | default "" }}
            readOnly: {{ .readOnly }}
        {{- end }}
          env:
          - name: K8S_NODE_IP_FOR_METAFLOW
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: K8S_POD_NAME_FOR_METAFLOW
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: TZ
            value: "{{ tpl .Values.timezone . }}"
        - image: "{{ tpl .Values.image.elector.repository . }}:{{ tpl .Values.image.elector.tag . }}"
          imagePullPolicy: "{{ tpl .Values.image.elector.pullPolicy . }}"
          name: elector
          args:
          - --election=metaflow-server ## Service Name
          - --election-namespace={{- .Release.Namespace }}
          - --http=localhost:4040
          env:
            - name: TZ
              value: "{{ tpl .Values.timezone . }}"
          ports:
            - containerPort: 4040
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: server-config
          configMap:
            name: {{ include "metaflow.fullname" . }}
            items:
            - key: server.yaml
              path: server.yaml
      {{- range .Values.server.extraVolumeMounts }}
        - name: {{ .name }}
          {{- if .existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim }}
          {{- else if .hostPath }}
          hostPath:
            path: {{ .hostPath }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- include "serverNodeaffinity" . | indent 6 }}
      {{- include "serverPodAffinity" . | indent 6 }}
      {{- include "serverPodAntiAffinity" . | indent 6 }}
      {{- if or .Values.global.tolerations .Values.tolerations }}
      tolerations:
      {{- if .Values.global.tolerations }}
      {{- toYaml .Values.global.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- end }}