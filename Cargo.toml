[package]
name = "trident"
version = "0.1.0"
edition = "2021"
default-run = "trident"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[dependencies]
anyhow = "1.0"
bincode = "1.3.3"
bitflags = "1.3.2"
bytes = "0.5"
bytesize = "1.1.0"
cadence = "0.27.0"
chrono = "0.4.19"
cidr-utils = "0.5.6"
clap = {version = "3.1.5", features = ["derive"] }
crossbeam = "0.8.1"
dashmap = "5.0.0"
enum_dispatch = "0.3.7"
flexi_logger = "0.20"
futures = "~0.3"
hostname = "0.3.1"
http = "0.2.5"
httpbis = "0.9.1"
humantime-serde = "1.0"
ipnet = "2.4.0"
k8s-openapi = { version = "^0.13", features = ["v1_19"] }
kube = { version = "0.64", features = ["derive", "runtime"] }
libc = "0.2.103"
log = "0.4"
lru = "0.7.3"
neli = "0.5.3"
nix = "0.23"
nom = "7.0.0"
nom-derive = "0.10.0"
num_enum = "0.5.6"
openshift-openapi = { git =  "https://gitlab.yunshan.net/zhicong/openshfit-openapi.git", version = "0.3.1", features = ["v4_6"] }
page_size = "0.4.2"
parking_lot = "0.11"
pcap-sys = "0.1.3"
pnet = "^0.29"
prost = "0.8.0"
regex = "1"
reqwest = "0.11.7"
ring = "0.16.20"
roxmltree = "0.14.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.72"
serde_yaml = "0.8"
signal-hook = "0.3"
socket = "0.0.7"
sysinfo = { version = "0.23", default-features = false }
thiserror = "1.0"
tokio = { version = "1.12.0", features = ["full"] }
tonic = "0.5.2"

[target.'cfg(target_os = "windows")'.dependencies]
windows = {version = "0.30", features = ["Win32_Foundation", "Win32_System_Diagnostics_ToolHelp", "Win32_NetworkManagement_IpHelper", "Win32_Networking_WinSock", "Win32_System_LibraryLoader", "Win32_System_Threading", "Win32_System_ProcessStatus"]}


[dev-dependencies]
criterion = "0.3.5"
lru = "0.7.3"
pcap = "0.9.1"
rand = "0.8.5"
tempfile = "3.2.0"
uluru = "3.0.0"

[build-dependencies]
tonic-build = "0.5.2"

[features]

[[bench]]
name = "flow_generator"
harness = false

[[bench]]
name = "utils"
harness = false

[[bench]]
name = "lru"
harness = false

[[bench]]
name = "labeler"
harness = false
